version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: task-manager-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: task-manager
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - task-manager-network

  # Backend API
  backend:
    build: ./backend
    container_name: task-manager-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongo:27017/task-manager?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRE=7d
      - FRONTEND_URL=http://localhost:3000
      - PORT=5000
    depends_on:
      - mongo
    networks:
      - task-manager-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build: .
    container_name: task-manager-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - task-manager-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: task-manager-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - task-manager-network
    command: redis-server --appendonly yes

volumes:
  mongo-data:
    driver: local
  redis-data:
    driver: local

networks:
  task-manager-network:
    driver: bridge
